apiVersion: v1
kind: ConfigMap
metadata:
  name: psql-config
data:
  POSTGRES_USER: user
  POSTGRES_DB: database
  init.sql: |
    CREATE TABLE example (
        id SERIAL PRIMARY KEY,
        name TEXT NOT NULL,
        value INTEGER NOT NULL
    );
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  postgres-password: cG9zdGdyZXNwYXNz # base64 인코딩된 비밀번호 ("postgrespass")
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  ports:
    - port: 5432
  clusterIP: None
  selector:
    app: postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: psql-config
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
          volumeMounts:
            - name: psql-persistent-storage
              mountPath: /var/lib/postgresql/data
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: init-script
          configMap:
            name: psql-config
            items:
              - key: init.sql
                path: init.sql
        - name: psql-persistent-storage
          persistentVolumeClaim:
            claimName: psql-pv-claim
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: psql-pv-claim
spec:
  storageClassName: nfs-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
